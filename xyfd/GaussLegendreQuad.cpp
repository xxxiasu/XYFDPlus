/**
 * GaussLegendreQuad.cpp : xyfd class for representing Gauss-Legendre quadrature rules.
 * 
 * @author
 *   Xiasu Yang <xiasu.yang@sorbonne-universite.fr>
 */

/*------------------------------------------------------------------*\
    Dependencies
\*------------------------------------------------------------------*/
#include "GaussLegendreQuad.h"
#include <iostream>
#include <cmath>
#include <vector>
#include <array>

/*------------------------------------------------------------------*\
    Aliases
\*------------------------------------------------------------------*/
using StdArray2d = std::array<double, 2>;
using DoubleVec  = std::vector<double>;

//-More comments in GaussLegendreQuad.h
//
namespace xyfd
{
    void GaussLegendreQuad::_setX()
    {
        int deg = floor((order_ - 1)/2) + 1;

        if      (deg <  1)
            throw std::invalid_argument("Gauss-Legendre degree must >= 1!!!");
        else if (deg > 12)
            throw std::invalid_argument("deg > 12 data not available for Gauss-Legendre rule!!!");
        else if (deg == 1)
            x_ = {0.};
        else if (deg == 2)
            x_ = {-1./sqrt(3.),
                   1./sqrt(3.)};
        else if (deg == 3)
            x_ = {-sqrt(3.)/sqrt(5.),
                   0.,
                   sqrt(3.)/sqrt(5.)};
        else if (deg == 4)
            x_= {-sqrt(15.+2.*sqrt(30.))/sqrt(35.),
                 -sqrt(15.-2.*sqrt(30.))/sqrt(35.),
                  sqrt(15.-2.*sqrt(30.))/sqrt(35.),
                  sqrt(15.+2.*sqrt(30.))/sqrt(35.)};
        else if (deg == 5)
            x_ = {-sqrt(35.+2.*sqrt(70.))/(3.*sqrt(7.)),
                  -sqrt(35.-2.*sqrt(70.))/(3.*sqrt(7.)),
                   0.,
                   sqrt(35.-2.*sqrt(70.))/(3.*sqrt(7.)),
                   sqrt(35.+2.*sqrt(70.))/(3.*sqrt(7.))};
        else if (deg == 6)
            x_ = {-0.932469514203152027812301554493994609134765737712289824872549616526613,
                  -0.661209386466264513661399595019905347006448564395170070814526705852183,
                  -0.238619186083196908630501721680711935418610630140021350181395164574274,
                   0.238619186083196908630501721680711935418610630140021350181395164574274,
                   0.661209386466264513661399595019905347006448564395170070814526705852183,
                   0.932469514203152027812301554493994609134765737712289824872549616526613};
        else if (deg == 7)
            x_ = {-0.949107912342758524526189684047851262400770937670617783548769103913063,
                  -0.741531185599394439863864773280788407074147647141390260119955351967429,
                  -0.405845151377397166906606412076961463347382014099370126387043251794663,
                   0.,
                   0.405845151377397166906606412076961463347382014099370126387043251794663,
                   0.741531185599394439863864773280788407074147647141390260119955351967429,
                   0.949107912342758524526189684047851262400770937670617783548769103913063};
        else if (deg == 8)
            x_ = {-0.960289856497536231683560868569472990428235234301452038271639777372424,
                  -0.796666477413626739591553936475830436837171731615964832070170295039217,
                  -0.525532409916328985817739049189246349041964243120392857750857099272454,
                  -0.183434642495649804939476142360183980666757812912973782317188473699204,
                   0.183434642495649804939476142360183980666757812912973782317188473699204,
                   0.525532409916328985817739049189246349041964243120392857750857099272454,
                   0.796666477413626739591553936475830436837171731615964832070170295039217,
                   0.960289856497536231683560868569472990428235234301452038271639777372424};
        else if (deg == 9)
            x_ = {-0.968160239507626089835576202903672870049404800491925329550023311849080,
                  -0.836031107326635794299429788069734876544106718124675996104371979639455,
                  -0.613371432700590397308702039341474184785720604940564692872812942281267,
                  -0.324253423403808929038538014643336608571956260736973088827047476842186,
                   0.,
                   0.324253423403808929038538014643336608571956260736973088827047476842186,
                   0.613371432700590397308702039341474184785720604940564692872812942281267,
                   0.836031107326635794299429788069734876544106718124675996104371979639455,
                   0.968160239507626089835576202903672870049404800491925329550023311849080};
        else if (deg == 10)
            x_ = {-0.973906528517171720077964012084452053428269946692382119231212066696595,
                  -0.865063366688984510732096688423493048527543014965330452521959731845374,
                  -0.679409568299024406234327365114873575769294711834809467664817188952558,
                  -0.433395394129247190799265943165784162200071837656246496502701513143766,
                  -0.148874338981631210884826001129719984617564859420691695707989253515903,
                   0.148874338981631210884826001129719984617564859420691695707989253515903,
                   0.433395394129247190799265943165784162200071837656246496502701513143766,
                   0.679409568299024406234327365114873575769294711834809467664817188952558,
                   0.865063366688984510732096688423493048527543014965330452521959731845374,
                   0.973906528517171720077964012084452053428269946692382119231212066696595};
        else if (deg == 11)
            x_ = {-0.978228658146056992803938001122857390771422408919784415425801065983663,
                  -0.887062599768095299075157769303927266631675751225314384967411055537611,
                  -0.730152005574049324093416252031153458049643062026130311978378339687013,
                  -0.519096129206811815925725669458609554480227115119928489020922611486695,
                  -0.269543155952344972331531985400861524679621862439052281623925631880057,
                   0.,
                   0.269543155952344972331531985400861524679621862439052281623925631880057,
                   0.519096129206811815925725669458609554480227115119928489020922611486695,
                   0.730152005574049324093416252031153458049643062026130311978378339687013,
                   0.887062599768095299075157769303927266631675751225314384967411055537611,
                   0.978228658146056992803938001122857390771422408919784415425801065983663};
        else if (deg == 12)
            x_ = {-0.981560634246719250690549090149280822960155199813731510462682121807793,
                  -0.904117256370474856678465866119096192537596709213297546554075760681234,
                  -0.769902674194304687036893833212818075984925750018931637664419064249116,
                  -0.587317954286617447296702418940534280369098514048052481510270879667340,
                  -0.367831498998180193752691536643717561256360141335409621311799879504089,
                  -0.125233408511468915472441369463853129983396916305444273212921754748462,
                   0.125233408511468915472441369463853129983396916305444273212921754748462,
                   0.367831498998180193752691536643717561256360141335409621311799879504089,
                   0.587317954286617447296702418940534280369098514048052481510270879667340,
                   0.769902674194304687036893833212818075984925750018931637664419064249116,
                   0.904117256370474856678465866119096192537596709213297546554075760681234,
                   0.981560634246719250690549090149280822960155199813731510462682121807793};
    }

    void GaussLegendreQuad::_setW()
    {
        int deg = floor((order_ - 1)/2) + 1;

        if      (deg <  1)
            throw std::invalid_argument("Gauss-Legendre degree must >= 1!!!");
        else if (deg > 12)
            throw std::invalid_argument("deg > 12 data not available for Gauss-Legendre rule!!!");
        else if (deg == 1)
            w_ = {2.};
        else if (deg == 2)
            w_ = {1.,
                  1.};
        else if (deg == 3)
            w_ = {5./9.,
                  8./9.,
                  5./9.};
        else if (deg == 4)
            w_ = {49./(6.*(18.+sqrt(30.))),
                  49./(6.*(18.-sqrt(30.))),
                  49./(6.*(18.-sqrt(30.))),
                  49./(6.*(18.+sqrt(30.)))};
        else if (deg == 5)
            w_ = {5103./(50.*(322.+13.*sqrt(70.))),
                  5103./(50.*(322.-13.*sqrt(70.))),
                  128./225.,
                  5103./(50.*(322.-13.*sqrt(70.))),
                  5103./(50.*(322.+13.*sqrt(70.)))};
        else if (deg == 6)
            w_ = {0.171324492379170345040296142172732893526822501484043982398635439798945,
                  0.360761573048138607569833513837716111661521892746745482289739240237140,
                  0.467913934572691047389870343989550994811655605769210535311625319963914,
                  0.467913934572691047389870343989550994811655605769210535311625319963914,
                  0.360761573048138607569833513837716111661521892746745482289739240237140,
                  0.171324492379170345040296142172732893526822501484043982398635439798945};
        else if (deg == 7)
            w_ = {0.129484966168869693270611432679082018328587402259946663977208638724655,
                  0.279705391489276667901467771423779582486925065226598764537014032693618,
                  0.381830050505118944950369775488975133878365083533862734751083451030705,
                  0.417959183673469387755102040816326530612244897959183673469387755102040,
                  0.381830050505118944950369775488975133878365083533862734751083451030705,
                  0.279705391489276667901467771423779582486925065226598764537014032693618,
                  0.129484966168869693270611432679082018328587402259946663977208638724655};
        else if (deg == 8)
            w_ = {0.101228536290376259152531354309962190115394091051684957059003698064740,
                  0.222381034453374470544355994426240884430130870051249564725909289293616,
                  0.313706645877887287337962201986601313260328999002734937690263945074656,
                  0.362683783378361982965150449277195612194146039894330540524823067566686,
                  0.362683783378361982965150449277195612194146039894330540524823067566686,
                  0.313706645877887287337962201986601313260328999002734937690263945074956,
                  0.222381034453374470544355994426240884430130870051249564725909289293616,
                  0.101228536290376259152531354309962190115394091051684957059003698064740};
        else if (deg == 9)
            w_ = {0.0812743883615744119718921581105236506756617207824107507111076768806866,
                  0.180648160694857404058472031242912809514337821732040484498335906471357,
                  0.260610696402935462318742869418632849771840204437299951939997002119610,
                  0.312347077040002840068630406584443665598754861261904645554011165599143,
                  0.330239355001259763164525069286974048878810783572688334593096497858402,
                  0.312347077040002840068630406584443665598754861261904645554011165599143,
                  0.260610696402935462318742869418632849771840204437299951939997002119610,
                  0.180648160694857404058472031242912809514337821732040484498335906471357,
                  0.0812743883615744119718921581105236506756617207824107507111076768806866};
        else if (deg == 10)
            w_ = {0.0666713443086881375935688098933317928578648343201581451286948816134120,
                  0.149451349150580593145776339657697332402556639669427367835477268753238,
                  0.219086362515982043995534934228163192458771870522677089880956543635199,
                  0.269266719309996355091226921569469352859759938460883795800563276242153,
                  0.295524224714752870173892994651338329421046717026853601354308029755995,
                  0.295524224714752870173892994651338329421046717026853601354308029755995,
                  0.269266719309996355091226921569469352859759938460883795800563276242153,
                  0.219086362515982043995534934228163192458771870522677089880956543635199,
                  0.149451349150580593145776339657697332402556639669427367835477268753238,
                  0.0666713443086881375935688098933317928578648343201581451286948816134120};
        else if (deg == 11)
            w_ = {0.0556685671161736664827537204425485787285156256968981483483842856741554,
                  0.125580369464904624634694299223940100197615791395403500663934010817914,
                  0.186290210927734251426097641431655891691284748040203411781506404173872,
                  0.233193764591990479918523704843175139431798172316958509027319722121932,
                  0.262804544510246662180688869890509195372764677603144556380055371485512,
                  0.272925086777900630714483528336342189156041969894783747597600411453225,
                  0.262804544510246662180688869890509195372764677603144556380055371485512,
                  0.233193764591990479918523704843175139431798172316958509027319722121932,
                  0.186290210927734251426097641431655891691284748040203411781506404173872,
                  0.125580369464904624634694299223940100197615791395403500663934010817914,
                  0.0556685671161736664827537204425485787285156256968981483483842856741554};
        else if (deg == 12)
            w_ = {0.0471753363865118271946159614850170603170290739948470895605053470038097,
                  0.106939325995318430960254718193996224214570173470324880005126042102818,
                  0.160078328543346226334652529543359071872011730490864177909899544157954,
                  0.203167426723065921749064455809798376506518147274590146398594565797645,
                  0.233492536538354808760849898924878056259409972199754874730523497821492,
                  0.249147045813402785000562436042951210830460902569618831395351003116279,
                  0.249147045813402785000562436042951210830460902569618831395351003116279,
                  0.233492536538354808760849898924878056259409972199754874730523497821492,
                  0.203167426723065921749064455809798376506518147274590146398594565797645,
                  0.160078328543346226334652529543359071872011730490864177909899544157954,
                  0.106939325995318430960254718193996224214570173470324880005126042102818,
                  0.0471753363865118271946159614850170603170290739948470895605053470038097};
    }

    GaussLegendreQuad::GaussLegendreQuad(int order)
    //-Remark : use member initializer list when possible
    // to limit parameter copying
        : order_(order)
    {
        _setX();
        _setW();
    }

    GaussLegendreQuad::GaussLegendreQuad(const GaussLegendreQuad &obj)
        : order_(obj.order_),
          x_(obj.x_),
          w_(obj.w_) {}

    GaussLegendreQuad &GaussLegendreQuad::operator=(const GaussLegendreQuad &obj)
    {
        order_ = obj.order_;
        x_     = obj.x_;
        w_     = obj.w_;
        return *this;
    }

    int GaussLegendreQuad::getOrder() const
    {
        return order_;
    }

    DoubleVec GaussLegendreQuad::getX() const
    {
        return x_;
    }

    DoubleVec GaussLegendreQuad::getW() const
    {
        return w_;
    }
} // namespace xyfd